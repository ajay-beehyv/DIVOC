// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"encoding/json"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MosipGenerateOTPHandlerFunc turns a function with the right signature into a mosip generate o t p handler
type MosipGenerateOTPHandlerFunc func(MosipGenerateOTPParams) middleware.Responder

// Handle executing the request and returning a response
func (fn MosipGenerateOTPHandlerFunc) Handle(params MosipGenerateOTPParams) middleware.Responder {
	return fn(params)
}

// MosipGenerateOTPHandler interface for that can handle valid mosip generate o t p params
type MosipGenerateOTPHandler interface {
	Handle(MosipGenerateOTPParams) middleware.Responder
}

// NewMosipGenerateOTP creates a new http.Handler for the mosip generate o t p operation
func NewMosipGenerateOTP(ctx *middleware.Context, handler MosipGenerateOTPHandler) *MosipGenerateOTP {
	return &MosipGenerateOTP{Context: ctx, Handler: handler}
}

/*MosipGenerateOTP swagger:route POST /external/mosip/generateOTP mosipGenerateOTP

Generate OTP

*/
type MosipGenerateOTP struct {
	Context *middleware.Context
	Handler MosipGenerateOTPHandler
}

func (o *MosipGenerateOTP) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewMosipGenerateOTPParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// MosipGenerateOTPBody mosip generate o t p body
//
// swagger:model MosipGenerateOTPBody
type MosipGenerateOTPBody struct {

	// individual Id
	// Required: true
	IndividualID *string `json:"individualId"`

	// individual Id type
	// Required: true
	// Enum: [UIN VID]
	IndividualIDType *string `json:"individualIdType"`
}

// Validate validates this mosip generate o t p body
func (o *MosipGenerateOTPBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateIndividualID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIndividualIDType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *MosipGenerateOTPBody) validateIndividualID(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"individualId", "body", o.IndividualID); err != nil {
		return err
	}

	return nil
}

var mosipGenerateOTPBodyTypeIndividualIDTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["UIN","VID"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mosipGenerateOTPBodyTypeIndividualIDTypePropEnum = append(mosipGenerateOTPBodyTypeIndividualIDTypePropEnum, v)
	}
}

const (

	// MosipGenerateOTPBodyIndividualIDTypeUIN captures enum value "UIN"
	MosipGenerateOTPBodyIndividualIDTypeUIN string = "UIN"

	// MosipGenerateOTPBodyIndividualIDTypeVID captures enum value "VID"
	MosipGenerateOTPBodyIndividualIDTypeVID string = "VID"
)

// prop value enum
func (o *MosipGenerateOTPBody) validateIndividualIDTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, mosipGenerateOTPBodyTypeIndividualIDTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *MosipGenerateOTPBody) validateIndividualIDType(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"individualIdType", "body", o.IndividualIDType); err != nil {
		return err
	}

	// value enum
	if err := o.validateIndividualIDTypeEnum("body"+"."+"individualIdType", "body", *o.IndividualIDType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *MosipGenerateOTPBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MosipGenerateOTPBody) UnmarshalBinary(b []byte) error {
	var res MosipGenerateOTPBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
