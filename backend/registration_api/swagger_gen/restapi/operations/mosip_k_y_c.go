// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"encoding/json"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MosipKYCHandlerFunc turns a function with the right signature into a mosip k y c handler
type MosipKYCHandlerFunc func(MosipKYCParams) middleware.Responder

// Handle executing the request and returning a response
func (fn MosipKYCHandlerFunc) Handle(params MosipKYCParams) middleware.Responder {
	return fn(params)
}

// MosipKYCHandler interface for that can handle valid mosip k y c params
type MosipKYCHandler interface {
	Handle(MosipKYCParams) middleware.Responder
}

// NewMosipKYC creates a new http.Handler for the mosip k y c operation
func NewMosipKYC(ctx *middleware.Context, handler MosipKYCHandler) *MosipKYC {
	return &MosipKYC{Context: ctx, Handler: handler}
}

/*MosipKYC swagger:route POST /external/mosip/kyc mosipKYC

Get KYC information from MOSIP

*/
type MosipKYC struct {
	Context *middleware.Context
	Handler MosipKYCHandler
}

func (o *MosipKYC) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewMosipKYCParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// MosipKYCBody mosip k y c body
//
// swagger:model MosipKYCBody
type MosipKYCBody struct {

	// individual Id
	// Required: true
	IndividualID *string `json:"individualId"`

	// individual Id type
	// Required: true
	// Enum: [UIN VID]
	IndividualIDType *string `json:"individualIdType"`

	// otp
	// Required: true
	// Min Length: 6
	Otp *string `json:"otp"`
}

// Validate validates this mosip k y c body
func (o *MosipKYCBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateIndividualID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIndividualIDType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOtp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *MosipKYCBody) validateIndividualID(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"individualId", "body", o.IndividualID); err != nil {
		return err
	}

	return nil
}

var mosipKYCBodyTypeIndividualIDTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["UIN","VID"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mosipKYCBodyTypeIndividualIDTypePropEnum = append(mosipKYCBodyTypeIndividualIDTypePropEnum, v)
	}
}

const (

	// MosipKYCBodyIndividualIDTypeUIN captures enum value "UIN"
	MosipKYCBodyIndividualIDTypeUIN string = "UIN"

	// MosipKYCBodyIndividualIDTypeVID captures enum value "VID"
	MosipKYCBodyIndividualIDTypeVID string = "VID"
)

// prop value enum
func (o *MosipKYCBody) validateIndividualIDTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, mosipKYCBodyTypeIndividualIDTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *MosipKYCBody) validateIndividualIDType(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"individualIdType", "body", o.IndividualIDType); err != nil {
		return err
	}

	// value enum
	if err := o.validateIndividualIDTypeEnum("body"+"."+"individualIdType", "body", *o.IndividualIDType); err != nil {
		return err
	}

	return nil
}

func (o *MosipKYCBody) validateOtp(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"otp", "body", o.Otp); err != nil {
		return err
	}

	if err := validate.MinLength("body"+"."+"otp", "body", string(*o.Otp), 6); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *MosipKYCBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MosipKYCBody) UnmarshalBinary(b []byte) error {
	var res MosipKYCBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
