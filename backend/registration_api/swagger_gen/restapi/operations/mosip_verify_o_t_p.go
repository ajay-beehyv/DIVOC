// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"encoding/json"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MosipVerifyOTPHandlerFunc turns a function with the right signature into a mosip verify o t p handler
type MosipVerifyOTPHandlerFunc func(MosipVerifyOTPParams) middleware.Responder

// Handle executing the request and returning a response
func (fn MosipVerifyOTPHandlerFunc) Handle(params MosipVerifyOTPParams) middleware.Responder {
	return fn(params)
}

// MosipVerifyOTPHandler interface for that can handle valid mosip verify o t p params
type MosipVerifyOTPHandler interface {
	Handle(MosipVerifyOTPParams) middleware.Responder
}

// NewMosipVerifyOTP creates a new http.Handler for the mosip verify o t p operation
func NewMosipVerifyOTP(ctx *middleware.Context, handler MosipVerifyOTPHandler) *MosipVerifyOTP {
	return &MosipVerifyOTP{Context: ctx, Handler: handler}
}

/*MosipVerifyOTP swagger:route POST /external/mosip/verifyOTP mosipVerifyOTP

Verify OTP

*/
type MosipVerifyOTP struct {
	Context *middleware.Context
	Handler MosipVerifyOTPHandler
}

func (o *MosipVerifyOTP) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewMosipVerifyOTPParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// MosipVerifyOTPBody mosip verify o t p body
//
// swagger:model MosipVerifyOTPBody
type MosipVerifyOTPBody struct {

	// individual Id
	// Required: true
	IndividualID *string `json:"individualId"`

	// individual Id type
	// Required: true
	// Enum: [UIN VID]
	IndividualIDType *string `json:"individualIdType"`

	// otp
	// Required: true
	Otp *string `json:"otp"`
}

// Validate validates this mosip verify o t p body
func (o *MosipVerifyOTPBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateIndividualID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIndividualIDType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOtp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *MosipVerifyOTPBody) validateIndividualID(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"individualId", "body", o.IndividualID); err != nil {
		return err
	}

	return nil
}

var mosipVerifyOTPBodyTypeIndividualIDTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["UIN","VID"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mosipVerifyOTPBodyTypeIndividualIDTypePropEnum = append(mosipVerifyOTPBodyTypeIndividualIDTypePropEnum, v)
	}
}

const (

	// MosipVerifyOTPBodyIndividualIDTypeUIN captures enum value "UIN"
	MosipVerifyOTPBodyIndividualIDTypeUIN string = "UIN"

	// MosipVerifyOTPBodyIndividualIDTypeVID captures enum value "VID"
	MosipVerifyOTPBodyIndividualIDTypeVID string = "VID"
)

// prop value enum
func (o *MosipVerifyOTPBody) validateIndividualIDTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, mosipVerifyOTPBodyTypeIndividualIDTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *MosipVerifyOTPBody) validateIndividualIDType(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"individualIdType", "body", o.IndividualIDType); err != nil {
		return err
	}

	// value enum
	if err := o.validateIndividualIDTypeEnum("body"+"."+"individualIdType", "body", *o.IndividualIDType); err != nil {
		return err
	}

	return nil
}

func (o *MosipVerifyOTPBody) validateOtp(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"otp", "body", o.Otp); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *MosipVerifyOTPBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MosipVerifyOTPBody) UnmarshalBinary(b []byte) error {
	var res MosipVerifyOTPBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// MosipVerifyOTPOKBody mosip verify o t p o k body
//
// swagger:model MosipVerifyOTPOKBody
type MosipVerifyOTPOKBody struct {

	// token
	Token string `json:"token,omitempty"`
}

// Validate validates this mosip verify o t p o k body
func (o *MosipVerifyOTPOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *MosipVerifyOTPOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MosipVerifyOTPOKBody) UnmarshalBinary(b []byte) error {
	var res MosipVerifyOTPOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
